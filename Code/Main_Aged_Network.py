{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Created By: Mohammad Sherafati, 2Dec 2018, m.sherafati7@gmail.com"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Import Packages"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import scipy as sc\n",
    "from scipy.misc import comb\n",
    "import seaborn as sns\n",
    "import numpy as np\n",
    "import random as rnd\n",
    "import matplotlib.pyplot as plt\n",
    "import multiprocessing as mp\n",
    "import matplotlib.patches as mpatches"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Variable"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "Set_Age = 100\n",
    "ensemble = 1"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Function"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "def Calculate_Energy(i,j,Energy_Adj):\n",
    "\n",
    "    Sum = 0\n",
    "\n",
    "    for k in range(len(Energy_Adj)):\n",
    "\n",
    "        Sum += Energy_Adj[i,k] * Energy_Adj[j,k]\n",
    "\n",
    "    return (((-Sum) * Energy_Adj[i,j])/sc.special.comb(len(Energy_Adj),3))\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "def Cal_Ene_Tot(Energy_Adj,Node):\n",
    "    Ene_Tot = 0\n",
    "\n",
    "    for i in range(len(Energy_Adj)):\n",
    "        for j in range(len(Energy_Adj)):\n",
    "            Ene_Tot += Calculate_Energy(i, j, Energy_Adj)\n",
    "\n",
    "    return (Ene_Tot) /6"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Main Code"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "def Mainfunc(Node,age,iterate,ensemble,std):\n",
    "\n",
    "    Node = Node\n",
    "    Tot_Time = np.zeros((1, 20000))\n",
    "    Tot_Ene = np.zeros((1, 20000))\n",
    "    ensemble = ensemble\n",
    "    age = age\n",
    "    iterate = iterate\n",
    "    Aging = np.ones((Node,Node),dtype=int)\n",
    "    Age_Imshow = []\n",
    "    Age_Counter = 1\n",
    "\n",
    "    '''Main'''\n",
    "\n",
    "\n",
    "    #ensumble\n",
    "    for ens in range(ensemble):\n",
    "\n",
    "\n",
    "        T = 0                                                 #Step\n",
    "        Time = []                                             #List Step\n",
    "        Energy_Adj = np.zeros((Node,Node),dtype=int)          #Energy Matrix(staet random)\n",
    "        Mat_Energy = []                                       #Save Energy in every step\n",
    "        Age_adj = np.zeros((Node, Node), dtype=int)           #Age Matrix\n",
    "        Eold = 0\n",
    "\n",
    "        \n",
    "        #add Gussian age to nodes\n",
    "        Random_gaussian = np.random.normal(0,std,(Node,Node))\n",
    "        Age_gaussian = np.absolute(Random_gaussian - np.mean(Random_gaussian))\n",
    "        Age_gaussian = np.triu(Age_gaussian, k=1)\n",
    "        Age_adj = np.copy(Age_gaussian)\n",
    "\n",
    "        \n",
    "        \n",
    "        #Create Random First State\n",
    "        for i in range(len(Energy_Adj)):\n",
    "            \n",
    "            for j in range(i,len(Energy_Adj)):\n",
    "                Energy_Adj[i, j] = rnd.choice([-1, 1])\n",
    "                Energy_Adj[j, i] = Energy_Adj[i, j]\n",
    "#                 Age_adj[i, j] =    Age_gaussian[j]                 #rnd.randint(0,age)\n",
    "#                 Age_adj[j, i] = Age_adj[i, j]\n",
    "                Age_adj[j,i] = Age_adj[i,j]\n",
    "    \n",
    "\n",
    "        #Zero Diognal\n",
    "\n",
    "        np.fill_diagonal(Energy_Adj,0)\n",
    "        np.fill_diagonal(Age_adj,0)\n",
    "        np.fill_diagonal(Aging, 0)\n",
    "        Age_adj = Age_adj.round().astype(int)\n",
    "        \n",
    "        Age_Imshow.append(Age_adj)\n",
    "        # for i in range(len(Energy_Adj)):\n",
    "        #     Energy_Adj[i, i] = 0\n",
    "        #     Age_adj[i, i] = 0\n",
    "        #     Aging[i,i] = 0\n",
    "\n",
    "\n",
    "\n",
    "        Eold = Cal_Ene_Tot(Energy_Adj, Node)\n",
    "        Copy_Ene_mat = np.copy(Energy_Adj)\n",
    "\n",
    "\n",
    "\n",
    "    #def func(Node,iterate,Energy_Adj):\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "        for t in range(iterate):\n",
    "\n",
    "            Age_network =0\n",
    "            dE = 0\n",
    "            Age_network = Age_adj.max()                       #Find Oldest link\n",
    "\n",
    "\n",
    "            #Change old links with random links\n",
    "            if Age_network == age:\n",
    "                dE = 0\n",
    "                for i in range(Node):\n",
    "                    for j in range(Node):\n",
    "                        p = 0\n",
    "                        p = rnd.choice([-1, 1])\n",
    "\n",
    "                        if Age_adj[i, j] == age:\n",
    "                            Energy_Adj[i, j] = p * Energy_Adj[i, j]\n",
    "                            Energy_Adj[j, i] = p * Energy_Adj[j, i]\n",
    "                            Copy_Ene_mat[i, j] = Energy_Adj[i, j]\n",
    "                            Copy_Ene_mat[j, i] = Energy_Adj[j, i]\n",
    "\n",
    "                            Age_adj[i, j] = 0\n",
    "                            Age_adj[j, i] = 0\n",
    "\n",
    "                            newE = Calculate_Energy(i, j, Energy_Adj)\n",
    "                            oldE = p * Calculate_Energy(i, j, Energy_Adj)\n",
    "                            dE += newE - oldE\n",
    "\n",
    "                Eold += dE\n",
    "                T += 1\n",
    "                Time.append(T)\n",
    "                Mat_Energy.append(Eold)\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "            #Change links with energy properties\n",
    "\n",
    "            i = rnd.randint(0, Node-1)\n",
    "            j = rnd.randint(0, Node-1)\n",
    "\n",
    "            Copy_Ene_mat[i, j] = -Copy_Ene_mat[i, j]\n",
    "            Copy_Ene_mat[j, i] = -Copy_Ene_mat[j, i]\n",
    "\n",
    "            dE = 0\n",
    "            dE = -2 * Calculate_Energy(i, j, Copy_Ene_mat)\n",
    "            if 0 < dE:\n",
    "\n",
    "                Energy_Adj[i, j] = -Energy_Adj[i, j]\n",
    "                Energy_Adj[j, i] = -Energy_Adj[j, i]\n",
    "\n",
    "                Eold = Eold - dE\n",
    "\n",
    "                Mat_Energy.append(Eold)\n",
    "                T +=1\n",
    "                Time.append(T)\n",
    "\n",
    "                Age_adj = Age_adj + Aging\n",
    "                Age_adj[i, j] = 0\n",
    "                Age_adj[j, i] = 0\n",
    "\n",
    "            else:\n",
    "                Copy_Ene_mat[i, j] = Energy_Adj[i, j]\n",
    "                Copy_Ene_mat[j, i] = Energy_Adj[j, i]\n",
    "                T += 1\n",
    "                Time.append(T)\n",
    "                Mat_Energy.append(Eold)\n",
    "                #Age_adj = Age_adj + Aging\n",
    "\n",
    "            if t == 100 * Age_Counter:\n",
    "                Age_Imshow.append(Age_adj)\n",
    "                Age_Counter += 1\n",
    "\n",
    "    return Time, Mat_Energy, Age_adj, Age_Imshow\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "Fun_Test = Mainfunc(32,10000,6000,1,10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "306"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#np.std(Fun_Test[2])\n",
    "(Fun_Test[2].max())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "100.79647972302625"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.std(Fun_Test[2])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x7fb64d8f0048>]"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(Fun_Test[0],Fun_Test[1])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x7fb64d8c6160>"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.kdeplot(np.reshape(Fun_Test[2],(1,len(Fun_Test[2])**2))[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/home/mohammad/.local/lib/python3.6/site-packages/scipy/stats/stats.py:1713: FutureWarning: Using a non-tuple sequence for multidimensional indexing is deprecated; use `arr[tuple(seq)]` instead of `arr[seq]`. In the future this will be interpreted as an array index, `arr[np.array(seq)]`, which will result either in an error or a different result.\n",
      "  return np.add.reduce(sorted[indexer] * weights, axis=axis) / sumval\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "302"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.distplot(np.reshape(Fun_Test[2],(1,len(Fun_Test[2])**2))[0])\n",
    "#np.std(np.reshape(Fun_Test[2],(1,len(Fun_Test[2])**2))[0])\n",
    "np.reshape(Fun_Test[2],(1,len(Fun_Test[2])**2))[0].max()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "ename": "IndexError",
     "evalue": "list index out of range",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mIndexError\u001b[0m                                Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-11-133ce4d32b9a>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mi\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mrange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mFun_Test\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m3\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m     \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhist\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreshape\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mFun_Test\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m3\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0;36m10\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mFun_Test\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m3\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m**\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m \u001b[0;31m# for i in range(len(Fun_Test[3])):\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;31m#     sns.kdeplot(np.reshape(Fun_Test[3][i],(1,len(Fun_Test[3][i])**2))[0])\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;31m#plt.savefig('a')\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mIndexError\u001b[0m: list index out of range"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "for i in range(len(Fun_Test[3])):\n",
    "    plt.hist(np.reshape(Fun_Test[3][i*10],(1,len(Fun_Test[3][i])**2))[0])\n",
    "# for i in range(len(Fun_Test[3])):\n",
    "#     sns.kdeplot(np.reshape(Fun_Test[3][i],(1,len(Fun_Test[3][i])**2))[0])\n",
    "#plt.savefig('a')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "ename": "IndexError",
     "evalue": "list index out of range",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mIndexError\u001b[0m                                Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-12-5ca0ac874c9f>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;31m#sns.kdeplot(np.reshape(Fun_Test[3][-1],(1,len(Fun_Test[3][0])**2))[-1])\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mi\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mrange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m700\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m801\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m     \u001b[0msns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mkdeplot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreshape\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mFun_Test\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m3\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mFun_Test\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m3\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m**\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      5\u001b[0m \u001b[0;31m#plt.savefig('a')\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mIndexError\u001b[0m: list index out of range"
     ]
    }
   ],
   "source": [
    "len(Fun_Test[3])\n",
    "#sns.kdeplot(np.reshape(Fun_Test[3][-1],(1,len(Fun_Test[3][0])**2))[-1])\n",
    "for i in range(700,801,1):\n",
    "    sns.kdeplot(np.reshape(Fun_Test[3][i],(1,len(Fun_Test[3][i])**2))[0])\n",
    "#plt.savefig('a')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "Random_gaussian = np.random.normal(0,100,(32,32))\n",
    "Age_gaussian = np.absolute(Random_gaussian - np.mean(Random_gaussian))\n",
    "Age_gaussian = np.triu(Age_gaussian, k=1)\n",
    "Age_adj = np.copy(Age_gaussian)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x7fc2101e4d30>"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.kdeplot(np.reshape(Fun_Test[3][0],(1,len(Fun_Test[3][0])**2))[0])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "31"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.reshape(Fun_Test[3][0],(1,len(Fun_Test[3][0])**2))[0].max()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "Mean_Ene = []\n",
    "Thresh = []\n",
    "for i in range(1,121,1):\n",
    "    Fun_Test1 = Mainfunc(20,i,5000,1,1)\n",
    "    Mean_Ene.append(np.mean(Fun_Test1[1]))\n",
    "    Thresh.append(i/sc.special.comb(20,2))\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x7fc2100ff6d8>]"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(Thresh,Mean_Ene)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [],
   "source": [
    "np.savetxt('T20.txt',Thresh)\n",
    "np.savetxt('E20.txt',Mean_Ene)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "List_Nom = [20,32,64,100]\n",
    "for i in List_Nom :\n",
    "    Mean_Func = np.loadtxt('/home/mohammad/Documents/Thesis/Aged-Network/Results/Transition Point/E'+str(i)+'.txt')\n",
    "    Thres = np.loadtxt('/home/mohammad/Documents/Thesis/Aged-Network/Results/Transition Point/T'+str(i)+'.txt')\n",
    "    plt.plot(Thres,Mean_Func)\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
